{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["google","window","Wizometer","props","autocomplete","handlePlaceChange","bind","state","lat","long","zipcode","wizometer","this","maps","places","Autocomplete","document","getElementById","addListener","zipper","wiz","addressObject","getPlace","geometry","lng","i","address_components","length","adrComp","types","includes","long_name","trim","setState","weatherAPI","console","log","fetch","then","response","ok","json","data","getWizometer","daily","day","wizzes","push","getIconWiz","getRainWiz","getTempWindWiz","Math","min","tempWiz","tempHigh","floor","apparentTemperatureHigh","tempDelta","apparentTemperatureLow","tempAvg","delta","round","windSpeed","iconWz","icon","chanceOfRain","precipProbability","precipIntensityMax","zipDisp","wizTextDisp","wizNumberDisp","className","onSubmit","e","preventDefault","id","width","type","href","target","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.79c38b55.chunk.js","sourcesContent":["//import { render } from '@testing-library/react';\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst google = window.google;\n\nclass Wizometer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.autocomplete = null;\n    this.handlePlaceChange = this.handlePlaceChange.bind(this);\n    this.state = {\n      lat: '',\n      long: '',\n      zipcode: '',\n      wizometer: 0\n    }\n  }\n\n  componentDidMount() {\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('location-autocomplete'), {\n      'fields': ['address_components', 'geometry']\n    });\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceChange);\n  }\n\n  handlePlaceChange() {\n    let state = this.state,\n        zipper = '',\n        lat = '',\n        long = '',\n        wiz = '';\n    \n    const addressObject = this.autocomplete.getPlace();\n    lat = addressObject.geometry['location'].lat();\n    long = addressObject.geometry['location'].lng();\n    for (let i=0; i<addressObject.address_components.length; i++) {\n      const adrComp = addressObject.address_components[i];\n      if (adrComp.types) {\n        if (adrComp.types.includes('postal_code')) {\n          zipper = adrComp.long_name;\n        } \n        if (adrComp.types.includes('postal_code_suffix')) {\n          zipper += '-' + adrComp.long_name;\n        }\n        if (adrComp.types.includes('postal_code_prefix')) {\n          zipper = adrComp.long_name + ' ' + zipper;\n        } \n      }\n    }\n    state.zipcode = zipper.trim();\n    state.lat = lat;\n    state.long = long;\n    state.wizometer = 0;\n    this.setState(state);\n\n    // geet weather data and wiz it\n    let weatherAPI = `https://api.pirateweather.net/forecast/1etAJHbeFP22Y0LWmF8tS7BMxmQw7D5K6RN1HMha/${lat},${long}`;\n    console.log('weather url', weatherAPI);\n    fetch(weatherAPI).then(response => {\n      if (response.ok) {\n        return response.json(); \n      }\n      throw response;\n    }).then(data => {\n      console.log('data', data);\n      wiz = this.getWizometer(data.daily.data[0]);\n      if (wiz > 0) {\n        state.wizometer = wiz;\n        this.setState(state);\n      }\n    })\n  }\n\n  getWizometer(day) {\n    console.log('day info: ', day);\n\n    let wizzes = []\n    wizzes.push(this.getIconWiz(day))\n    wizzes.push(this.getRainWiz(day))\n    wizzes.push(this.getTempWindWiz(day))\n\n    console.log('wizzes', wizzes);\n    return Math.min(...wizzes);\n  }\n\n  // going to use apparent temp here because it takes humidity into account\n  // @TODO account for seasonality here - a 40-50 day in winter would be an 11 for most climates\n  getTempWindWiz(day) {\n    console.log('temp wiz---');\n    let tempWiz = 11;\n    const tempHigh = Math.floor(day.apparentTemperatureHigh),\n          tempLow = Math.floor(day.apparentTemperatureLow),\n          tempDelta = tempHigh - tempLow,\n          // average is 1/3 of the way down from tempHigh because most people care about daylight\n          tempAvg = Math.floor(tempHigh - (tempDelta / 3)),\n          maxPerfectDay = 80,\n          minPerfectDay = 62;\n    \n    // according to https://www.huffingtonpost.com.au/2017/11/27/this-is-the-perfect-temperature-for-being-happy-and-social-study-finds_a_23288718/\n    // the perfect outdoor temperature is 72 degrees, so key off that\n    if ((tempAvg <= maxPerfectDay) && (tempAvg >= minPerfectDay)) {\n      tempWiz = 11;\n    } else {\n      let delta = 0;\n      if (tempAvg > maxPerfectDay) {\n        console.log('too hot');\n        // too stinkin' hot\n        delta = Math.round((tempAvg - maxPerfectDay) / 5);\n      } else {\n        delta = Math.round((minPerfectDay - tempAvg) / 15);\n      }\n      tempWiz = (11 - delta);\n    }\n\n    if (day.windSpeed > 10) {\n      console.log('windy: -' + (Math.floor(day.windSpeed / 10)));\n      tempWiz = tempWiz - (Math.floor(day.windSpeed / 10));\n    }\n\n    return tempWiz;\n  }\n  getIconWiz(day) {\n    const iconWz = {\n      'clear-day' : 11, \n      'clear-night': 11,\n      'rain': 6,\n      'snow': 9,\n      'sleet': 2,\n      'wind' : 8,\n      'fog': 6, \n      'cloudy' : 7,\n      'partly-cloudy-day': 11, \n      'partly-cloudy-night' : 9,\n    }\n    return iconWz[day.icon] ? iconWz[day.icon] : 0;\n  }\n\n  getRainWiz(day) {\n    const chanceOfRain = Math.floor(day.precipProbability * 100);\n    if (chanceOfRain === 0) {\n      return 11\n    } else {\n      // for every increase of 10 percent chance of rain\n      let delta = Math.floor(chanceOfRain / 10);\n      // light rain is beter than heavy rain\n      if (day.precipIntensityMax > 1) {\n        delta *= 0.7\n      } else {\n        delta *= 0.3\n      }\n      console.log('rain wiz', Math.floor(11 - delta));\n      return Math.floor(11 - delta);\n    }\n  }\n\n\n\n  render() {\n    let zipDisp = this.state.zipcode ? `Zip Code: ${this.state.zipcode}` : 'type an address to begin',\n        wizTextDisp = this.state.wizometer ? 'Today is a' : this.state.zipcode ? 'Wizzing' : <span>&nbsp;</span>,\n        wizNumberDisp = this.state.wizometer ? this.state.wizometer : <span>&nbsp;</span>;\n\n    if (this.state.wizometer === 8 || this.state.wizometer === 11 ) {\n      wizTextDisp = 'Today is an';\n    }\n    \n    let handleSubmit = (e) => {\n      e.preventDefault();\n    }\n\n    return (\n      <div className=\"wizometer\">\n        <form onSubmit={handleSubmit}>\n          <input id=\"location-autocomplete\" width=\"100%\" type=\"text\" />\n        </form>\n       <div className=\"zip-disp\">\n         {zipDisp}\n       </div>\n       <div className=\"zip-disp\">\n         {wizTextDisp}\n       </div>\n       <h2 className=\"wiz-local\">\n         {wizNumberDisp}\n       </h2>\n       <div className=\"credits\">\n         Powered By <a href=\"https://pirateweather.net\" target=\"_blank\">Pirate Weather</a>\n       </div>\n      </div>\n    )\n  }\n}\n/*\n\nfunction Filter(props) {\n  let propValues = Object.keys(props.values).sort();\n  \n  let options = propValues.map((v) => {\n   // console.log('v', v, props.values[v]);\n    return(<option key={v} value={v}>{v} ({props.values[v]} streams)</option>);\n  });\n\n  return (\n    <div>\n      <label htmlFor={props.id}>\n        {props.label}\n      </label>\n      <select id={props.id} onChange={props.filterFn}>\n        <option value=\"\">Choose one</option>\n        {options}\n\n      </select>\n    </div>\n  );\n}\n*/\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Wizometer />\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}